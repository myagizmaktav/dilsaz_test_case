import Head from "next/head";
import { Inter } from "next/font/google";
import { Button } from "@/components/button/button";
import { Input } from "@/components/input/input";
import { Select } from "@/components/select/select";
import { TableStatusColumn } from "@/components/table/TableStatusColumn/TableStatusColumn";
import { TableTextColumn } from "@/components/table/TableTextColumn/TableTextColumn";
import { useWindowSize } from "@/hook/useDimension";
import { useAtom, useAtomValue } from "jotai";
import { rawTodoAtom } from "@/data/todo";
import { useInitialHook } from "@/hook/initialHook";
import { sortingAtom } from "@/data/sorting";
import styles from "./main.module.scss";
const inter = Inter({ subsets: ["latin"] });
export const Main = () => {
  useInitialHook();
  const todo = useAtomValue(rawTodoAtom);

  const dimensions = useWindowSize();
  const [sortingPosition, setSortingPosition] = useAtom(sortingAtom);
  const isBigScreen = (dimensions?.width || 0) > 768;
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={` ${inter.className} ${styles.toMiddle}`}>
        <div>hello</div>
        <Button title="Click me" backgroundColor="red" />
        <div
          style={{
            width: "20%",
          }}
        >
          <Input />
        </div>

        <div
          style={{
            width: "20%",
          }}
        >
          <Select />
        </div>

        <div
          style={{
            flexDirection: "row",
            display: "flex",
          }}
        >
          <div
            style={{
              flex: 1,
            }}
          >
            {isBigScreen && (
              <TableTextColumn
                field="id"
                data={todo}
                setSortingPosition={setSortingPosition}
                sortingPosition={sortingPosition}
              />
            )}
          </div>

          <div
            style={{
              flex: 1,
            }}
          >
            <TableTextColumn
              field="description"
              data={todo}
              setSortingPosition={setSortingPosition}
              sortingPosition={sortingPosition}
            />
          </div>
          <div
            style={{
              flex: 1,
            }}
          >
            <TableStatusColumn
              field="status"
              data={todo}
              setSortingPosition={setSortingPosition}
              sortingPosition={sortingPosition}
            />
          </div>

          <div
            style={{
              flex: 1,
            }}
          >
            {isBigScreen && (
              <TableTextColumn
                field="updated_at"
                isDate={true}
                data={todo}
                setSortingPosition={setSortingPosition}
                sortingPosition={sortingPosition}
              />
            )}
          </div>

          <div
            style={{
              flex: 1,
            }}
          >
            {isBigScreen && (
              <TableTextColumn
                field="created_at"
                isDate={true}
                data={todo}
                setSortingPosition={setSortingPosition}
                sortingPosition={sortingPosition}
              />
            )}
          </div>
        </div>
      </main>
    </>
  );
};
